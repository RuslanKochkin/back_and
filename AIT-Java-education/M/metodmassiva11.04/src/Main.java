public class Main {
    public static void main(String[] args) {
        int[] array1 = {7, 6, 9, 10, 8}; //–∑–∞–¥–∞–µ–º –º–∞—Å–∏–≤ –∏–∑ 5 —ç–ª/
        int indexMaxEl = indexMax(array1);//–≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª/
        System.out.println(indexMaxEl); //–ø–µ—á–∞—Ç–∞–µ–º —ç—Ç–æ—Ç –∏–Ω–¥–µ–∫—Å
        int indexMinEl = indexMin(array1);//–≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å –º–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª/
        System.out.println(indexMinEl);//–ø–µ—á–∞—Ç–∞–µ–º —ç—Ç–æ—Ç –∏–Ω–¥–µ–∫—Å
        int[] array2 = getCloneSwapMinMax(array1); //–∫–ª–æ–Ω–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –∏ –º–µ–Ω—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–µ—Å—Ç–∞–º–∏
        print(array2);
    }
    public static void print(int[]arr1){
        for (int i = 0; i < arr1.length; i++){
            System.out.print(arr1[i] + " , ");
        }
        //-----------------------------------------------------------------------------------------------------
        //–ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
        //–∏ –≤ –Ω–µ–π –º–µ–Ω—è—è–µ—Ç –º–µ—Å—Ç–∞–º–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã
    }
            public static int[] getCloneSwapMinMax(int [] array) {
            int[] newArr = new int[array.length]; //–û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Ç–∞–∫–æ–π –∂–µ –¥–ª–∏–Ω–Ω—ã
            // –∑–∞–ø—É—Å–∫–∞–µ–º —Ü—ã–∫–ª –∫–æ—Ç–æ—Ä—ã–π –∫–∞–ø–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ array –≤ newArr
            for (int i = 0; i < newArr.length; i++) {
            newArr[i] = array[i];
            }
            int indexOfMin = indexMax(newArr); // –Ω–∞—à–ª–∏ –∏–Ω–¥–µ–∫—Å –º–∞–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞  –≤ newArr
            int indexOfMax = indexMin(newArr);//–Ω–∞—à–ª–∏ –∏–Ω–¥–µ–∫—Å –º–∏–Ω —ç–ª–µ–º–µ–Ω—Ç–∞  –≤ newArr
            int temp = newArr [indexOfMin]; // –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é temp –ø–µ—Ä–µ–Ω–µ—Å–ª–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ newArr
            newArr[indexOfMin] = newArr[indexOfMax]; //–Ω–∞ –º–µ—Å—Ç–æ –º–∏–Ω –ø–æ–ª–æ–∂–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π
            newArr[indexOfMax] = temp; // –Ω–∞ –º–µ—Å—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ–ª–æ–∂–∏–ª–∏ temp –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤
            return newArr;
        }
        //------------------------------------------------------------------------------------------------
    //–ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ò–ù–î–ï–ö–° –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–∏–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ
    public static int indexMax(int[] array) {
        int maxValue = 0;
        for (int i = 1; i < array.length; i++) {
            if (array[i] > array[maxValue]) {
                maxValue = i;
            }
        }
        return maxValue;
    }

    //-------------------------------------------------------------------------------------------------
    // –ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ò–ù–î–ï–ö–° –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–∏–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ
    public static int indexMin(int[] a) {
        int minValue = 0;
        for (int i = 1; i < a.length; i++) {
            if (a[i] < a[minValue]) {
                minValue = i;
            }
        }
        return minValue;
    }
}






//--------------------------------------------------------------------------------------------------
//    //–ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª.
//    public static int maxNumber(int[] arr){
//        int maxValue = arr[0];
//        for (int i = 1; i < arr.length; i++) {
//            if(maxValue<arr[i]){
//                maxValue=arr[i];
//            }
//        }
//        return maxValue;



//public static String[] changeWordsFoStars (String[] str){
//
//     String[] clone = new String[str.length];
//
//     for (int i = 0; i < clone.length; i++) {
//         clone[i] = str[i];
//         if(clone[i].length()>=5)
//         { clone[i] = "****";
//         } else {clone[i] = clone[i];}
//     }
//     return clone

//**–ê–ª–≥–æ—Ä–∏—Ç–º –∑–∞–ø—É—Å–∫–∞ —Ü–∏–∫–ª–∞:**
//–®–∞–≥ 1. –ó–∞–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (—Å—á–µ—Ç—á–∏–∫, –ø–∞—Ä–∞–º–µ—Ç—Ä) —Ü–∏–∫–ª–∞;
//–®–∞–≥ 2. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—Å–ª–æ–≤–∏–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Ü–∏–∫–ª–∞;
//–®–∞–≥ 3. –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–µ–ª–æ —Ü–∏–∫–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –æ–ø–µ—Ä–∞—Ç—Ä–∞–º–∏;
//–®–∞–≥ 4. –ò–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (—Å—á–µ—Ç—á–∏–∫, –ø–∞—Ä–∞–º–µ—Ç—Ä) —Ü–∏–∫–ª–∞;
//–®–∞–≥ 5. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ü–∏–∫–ª –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ —Ä–∞–±–æ—Ç—É –Ω–∞ –∫—Ä–∞–π–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö –∏ –≤ —Ü–µ–ª–æ–º.

//3. –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º:
//–®–ê–ì 1: –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏:
//- –ß—Ç–æ –±—É–¥–µ–º –≤–≤–æ–¥–∏—Ç—å? –ß—Ç–æ –Ω–∞ –≤—Ö–æ–¥–µ?
//- –ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –≤—Ö–æ–¥–µ?
//- –ß—Ç–æ –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å?
//- –ß—Ç–æ –±—É–¥–µ—Ç –Ω–∞ –≤—ã—Ö–æ–¥–µ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã?
//- –ö–ª—é—á–µ–≤–æ–π –∞–ª–≥–æ—Ä–∏—Ç–º? - –∑–∞–ø–∏—Å–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º, –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –±–ª–æ–∫-—Å—Ö–µ–º—É
//- –ö–∞–∫–æ–π –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º? - –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—Å–∞—Ç—å
//
//–®–ê–ì 2: –ù–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞:
//- –∏–º–ø–æ—Ä—Ç –Ω–µ–æ–±–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç;
//- –ø–æ–¥–∫–∞–∑–∫–∏ –ø–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É —è–∑—ã–∫–∞;
//- –ø–æ—Ö–æ–∂–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞...
//
//–®–ê–ì 3: –ó–∞–ø—É—Å–∫ –∏ –æ—Ç–ª–∞–¥–∫–∞
//- —É—Å—Ç—Ä–∞–Ω—è–µ–º –æ—à–∏–±–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞...
//
//–®–ê–ì 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –Ω–∞–±–æ—Ä–∞—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞ –≤—Å–µ —Å–ª—É—á–∞–∏ –ø–æ –ª–æ–≥–∏–∫–µ
//
//–®–∞–≥ 5: –ú–æ–∂–Ω–æ "–ø—Ä–æ–¥–∞–≤–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç" üòâ